// TABLE OF CONTENTS
//
// Global Mixings
// Media Queries
// Variable Mixings
// Global Classes

// $GLOBAL MIXINGS
@mixin left {
	text-align: left;
}

@mixin center {
	text-align: center;
}

@mixin right {
	text-align: right;
}

@mixin indent {
	text-indent: -999em;
}

@mixin centerer {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

@mixin capitalize-first-letter {
	text-transform: lowercase;
	&:first-letter {
		text-transform: capitalize;
	}
}

// $MEDIA QUARIES
@mixin medium-device-breakpoint {
	@media screen and (min-width: $container-md) {
		@content;
	}
}

@mixin large-device-breakpoint {
	@media screen and (min-width: $container-lg) {
		@content;
	}
}

@mixin xlarge-device-breakpoint {
	@media screen and (min-width: $container-xlg) {
		@content;
	}
}

// $VARIABLE MIXINS
@mixin custom-device-breakpoint($min-width: 320px) {
	@media screen and (min-width: $min-width) {
		@content;
	}
}

@mixin outlined($args: 1px solid red) {
	outline: $args;
}

@mixin cursor($args) {
	cursor: $args;
}

@mixin text-overflow($overflow: hidden, $text-overflow: ellipsis, $max-width: 100%) {
	overflow-x: $overflow;
	max-width: $max-width;
	white-space: nowrap !important;
	text-overflow: $text-overflow;
}

@mixin blocked($full: false) {
	display: block;
	width: 100%;
	height: if($full, 100%, auto);
}

@mixin blur($args) {
	filter: blur($args);
}

@mixin pseudo-tag($switch: before) {
	@if $switch == before {
		&:before {
			content: "";
			display: block;
			position: absolute;
			//mix-blend-mode: overlay;
		}
	} @else {
		&:after {
			content: "";
			display: block;
			position: absolute;
		}
	}
}

@mixin transparent-gradient($color, $direction: right, $from: 0%, $to: 100%) {
	background: linear-gradient(to $direction, fade-out($color, 1) $from, fade-out($color, 0) $to);
}

@mixin gradient($color-1, $color-2, $direction: right, $from: 0%, $to: 100%) {
	background: $color-1;
	background: linear-gradient(to $direction, $color-1 $from, $color-2 $to);
}

@mixin border-radius($radius) {
	border-radius: $radius;
}

@mixin custom-box-shadow($args) {
	box-shadow: $args;
}

@mixin transition($args) {
	transition: $args;
}

@mixin background($position, $bg-size: auto) {
	@if ($position == center) {
		background-position: 50% 50%;
	} @else {
		background-position: 0 0;
	}
	background-repeat: no-repeat;
	background-size: $bg-size;
}

@mixin column-grid($column-count, $column-gap) {
	column-count: $column-count;
	column-gap: $column-gap;
}

// Focus shadow mixin.
@mixin focus-shadow() {
	box-shadow: 0 0 8px rgba(0, 0, 0, 0.18), 0 8px 16px rgba(0, 0, 0, 0.36);
}

@mixin shadow-2dp() {
	box-shadow: 0 2px 2px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
		0 3px 1px -2px rgba(0, 0, 0, $shadow-key-umbra-opacity), 0 1px 5px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity);
}
@mixin shadow-3dp() {
	box-shadow: 0 3px 4px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
		0 3px 3px -2px rgba(0, 0, 0, $shadow-key-umbra-opacity), 0 1px 8px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity);
}
@mixin shadow-4dp() {
	box-shadow: 0 4px 5px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
		0 1px 10px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity), 0 2px 4px -1px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}
@mixin shadow-6dp() {
	box-shadow: 0 6px 10px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
		0 1px 18px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity), 0 3px 5px -1px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}
@mixin shadow-8dp() {
	box-shadow: 0 8px 10px 1px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
		0 3px 14px 2px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
		0 5px 5px -3px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

@mixin shadow-16dp() {
	box-shadow: 0 16px 24px 2px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
		0 6px 30px 5px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
		0 8px 10px -5px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

@mixin shadow-24dp() {
	box-shadow: 0 9px 46px 8px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
		0 11px 15px -7px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
		0 24px 38px 3px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

@mixin material-animation-fast-out-slow-in($duration: 0.2s) {
	transition-duration: $duration;
	transition-timing-function: ease("animation-curve-fast-out-slow-in");
}

@mixin material-animation-linear-out-slow-in($duration: 0.2s) {
	transition-duration: $duration;
	transition-timing-function: ease("animation-curve-linear-out-slow-in");
}

@mixin material-animation-fast-out-linear-in($duration: 0.2s) {
	transition-duration: $duration;
	transition-timing-function: ease("animation-curve-fast-out-linear-in");
}

@mixin material-animation-default($duration: 0.2s) {
	transition-duration: $duration;
	transition-timing-function: $animation-curve-default;
}

/* Dialog */

@mixin dialog-width($units: 5) {
	@if (type_of($units) != "number") {
		@error "The unit given to dialog-width should be a number.";
	}
	// 56dp is the base unit width for Dialogs.
	// With 5 units being the number of units for a mobile device.
	// https://goo.gl/sK2O5o
	width: $units * 56px;
}
